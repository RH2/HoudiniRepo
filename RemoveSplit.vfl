int currentPrim;
for(int p = 0; p<nprimitives(1);p++){
	int pointArray[] = primpoints(1,p);
	//Conditions to create new primitive?
		// Rising edge, going from bad point to good point.
	int prev_flip = 0;
	int flip = 0;
	foreach(int pnt; pointArray){
		//what is a bad point? 
			//inside + !intersection
		int pnt_Id = point(1,"id",pnt);
		int pnt_In = point(1,"in",pnt);
		vector loc;
		if(pnt_In>0&&pnt_Id==-1){ //point is bad!
			flip = 0;
		}else{				//else:	point is good!
			flip = 1;
			loc = point(1,"P",pnt);
			if(flip!=prev_flip){
				//rising edge, create new prim.
				currentPrim = addprim(0,"polyline");
				//add point
				int new_point = addpoint(0,loc); 
				int new_vert = addvertex(0,currentPrim,new_point);				
			}else{
				//add point
				int new_point = addpoint(0,loc); 
				int new_vert = addvertex(0,currentPrim,new_point);					
			}
		}
	}
}